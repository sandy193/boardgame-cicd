name: Board Game CI/CD Pipeline

on:
  push:
    branches: [ main ]

  pull_request:
    branches: [ main ]


jobs:
  file_sytem_scan_using_trivy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Trivy Vulnerability scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          severity: "CRITICAL,HIGH"
          
      - name: Upload Trivy Report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.html


  build:
    runs-on: ubuntu-latest
    needs: file_sytem_scan_using_trivy        
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      - name: Build with Maven
        run: mvn clean package

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: target/


  test:
    runs-on: ubuntu-latest
    needs: [file_sytem_scan_using_trivy, build]        
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      - name: Run tests
        run: mvn test

  sonarqube_scan:
    runs-on: ubuntu-latest
    needs: [file_sytem_scan_using_trivy, build, test]        
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0  
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

      - name: SonarQube Quality Gate Check
        id: sonarqube-quality-gate-check
        uses: SonarSource/sonarqube-scan-action@master
        with:
          pollingTimeoutSec: 300
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

  build_docker_image_and_push:
    runs-on: ubuntu-latest
    needs: [file_sytem_scan_using_trivy, build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download build-artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts    
          path: target/

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: setup docker buildx
        uses: docker/setup-buildx-action@v3

      - name: login to docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ vars.DOCKER_USERNAME }}/github-board-game:${{ github.sha }}
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64

      - name: scan docker image using trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ vars.DOCKER_USERNAME }}/github-board-game:${{ github.sha }}
          format: table
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

  
        
        
